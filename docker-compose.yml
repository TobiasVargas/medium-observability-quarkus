version: '3'

services:
  jaeger_tracing_services:
    container_name: jaeger_tracing_services
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  postgres_tracing_services:
    container_name: postgres_tracing_services
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  prometheus_tracing_services:
    container_name: prometheus_tracing_services
    image: prom/prometheus:v3.0.1
    network_mode: "host"
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"

  elasticsearch_tracing_services:
    container_name: elasticsearch_tracing_services
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2-amd64
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
    network_mode: host
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana_tracing_services:
    container_name: kibana_tracing_services
    image: docker.elastic.co/kibana/kibana-oss:7.10.2
    network_mode: host
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://localhost:9200

  logstash_tracing_services:
    container_name: logstash_tracing_services
    image: docker.elastic.co/logstash/logstash-oss:7.10.2
    volumes:
      - source: ./pipelines
        target: /usr/share/logstash/pipeline
        type: bind
    ports:
      - "12201:12201/udp"
      - "5000:5000"
      - "9600:9600"
    network_mode: host
    depends_on:
      - elasticsearch_tracing_services
